services:
  familydiscovery:
    build:
      context: .
      dockerfile: familydiscovery/Dockerfile
    container_name: familydiscovery
    ports:
      - "8761:8761"
    networks:
      - familygram-network
    volumes:
      - familygram-storage:/var/lib/discovery/data

  familygateway:
    build:
      context: .
      dockerfile: familygateway/Dockerfile
    container_name: familygateway
    ports:
      - "8080:8080"
    env_file: .env
    networks:
      - familygram-network
    volumes:
      - familygram-storage:/var/lib/gateway/data
      
  familyauth:
    build:
      context: .
      dockerfile: familyauth/Dockerfile
    container_name: familyauth
    ports:
      - "8082:8082"
    env_file: .env
    depends_on:
      - broker
      - familygateway
      - familydiscovery
    networks:
      - familygram-network
    volumes:
      - familygram-storage:/var/lib/auth/data

  familyfeed:
    build:
      context: .
      dockerfile: familyfeed/Dockerfile
    container_name: familyfeed
    ports:
      - "8084:8084"
    env_file: .env
    depends_on:
      - broker
      - familygateway
      - familydiscovery
    networks:
      - familygram-network
    volumes:
      - familygram-storage:/var/lib/feed/data

  familypost:
    build:
      context: .
      dockerfile: familypost/Dockerfile
    container_name: familypost
    ports:
      - "8083:8083"
    env_file: .env
    depends_on:
      - broker
      - familygateway
      - familydiscovery
    networks:
      - familygram-network
    volumes:
      - familygram-storage:/var/lib/post/data

  familynotification:
    build:
      context: .
      dockerfile: familynotification/Dockerfile
    container_name: familynotification
    ports:
      - "8085:8085"
    env_file: .env
    depends_on:
      - broker
      - familygateway
      - familydiscovery
    networks:
      - familygram-network
    volumes:
      - familygram-storage:/var/lib/notification/data

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - familygram-network
    volumes:
      - familygram-storage:/var/lib/redis/data

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    restart: always
    ports:
      - "5540:5540"
    networks:
      - familygram-network
    volumes:
      - familygram-storage:/var/lib/redisInsight/data

  broker:
    image: apache/kafka:latest
    container_name: broker
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    volumes:
      - familygram-storage:/var/lib/kafka/data
    networks:
      - familygram-network

volumes:
  familygram-storage:

networks:
  familygram-network:
    name: familygram-network
    driver: bridge
